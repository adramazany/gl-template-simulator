package dp.gl.gltemplatesimulator.swing.panel;

import dp.gl.gltemplatesimulator.dto.TemplateDTO;
import dp.gl.gltemplatesimulator.swing.util.BeanPropertyTableModel;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableColumnModel;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

public class TemplateListPanel extends JPanel {
    private JPanel rootPanel;
    private JTable table1;

    private List<TemplateDTO> templates = new ArrayList<>();
    BeanPropertyTableModel<TemplateDTO> tableModel = new BeanPropertyTableModel<TemplateDTO>(TemplateDTO.class);

    public List<TemplateDTO> getTemplates() {
        return templates;
    }

    public void setTemplates(List<TemplateDTO> templates) {
        this.templates = templates;
        tableModel.setData(templates);
        tableModel.fireTableDataChanged();
    }

    public TemplateListPanel() {
        tableModel.setData(templates);
        table1.setModel(tableModel);

        DefaultTableColumnModel cm = new DefaultTableColumnModel();
        cm.addColumn(table1.getColumn("id"));
        cm.addColumn(table1.getColumn("event_name"));
        cm.addColumn(table1.getColumn("name"));

        table1.setColumnModel(cm);

    }

    public void addListSelectionListener(ListSelectionListener listener) {
        table1.getSelectionModel().addListSelectionListener(listener);
    }

    public Object getValueAt(int row, int column) {
        return table1.getValueAt(row, column);
    }

    public int getSelectedRow() {
        return table1.getSelectedRow();
    }

    public TemplateDTO getSelectedTemplate() {
        if (table1.getSelectedRow() > -1) {
            return templates.get(table1.convertRowIndexToModel(table1.getSelectedRow()));
        }
        return null;
    }

    public void changeSelectedTemplate(TemplateDTO templateDTO) {
        if (table1.getSelectedRow() > -1) {
            templates.set(table1.convertRowIndexToModel(table1.getSelectedRow()), templateDTO);
            tableModel.fireTableDataChanged();
        }
    }

    public void addTemplateAndSelect(TemplateDTO templateDTO) {
        templates.add(templateDTO);
        tableModel.fireTableDataChanged();
    }

    public void removeSelectedTemplate() {
        if (table1.getSelectedRow() > -1) {
            templates.remove(table1.convertRowIndexToModel(table1.getSelectedRow()));
            tableModel.fireTableDataChanged();
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new CardLayout(0, 0));
        final JScrollPane scrollPane1 = new JScrollPane();
        rootPanel.add(scrollPane1, "Card2");
        table1 = new JTable();
        table1.setAutoCreateRowSorter(true);
        scrollPane1.setViewportView(table1);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
