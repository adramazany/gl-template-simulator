package dp.gl.gltemplatesimulator.swing.panel;

import dp.gl.gltemplatesimulator.dto.ArticleDTO;
import dp.gl.gltemplatesimulator.model.Article;
import dp.gl.gltemplatesimulator.model.ProfileMapping;
import dp.gl.gltemplatesimulator.swing.util.BeanPropertyTableModel;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

public class ArticlesTablePanel extends JPanel {
    private JPanel panel1;
    private JTable table1;

    private List<ArticleDTO> articles = new ArrayList<>();
    BeanPropertyTableModel<ArticleDTO> tableModel = new BeanPropertyTableModel<ArticleDTO>(ArticleDTO.class);

    public List<ArticleDTO> getArticles() {
        return articles;
    }

    public void setArticles(List<ArticleDTO> articles) {
        this.articles = articles;
        tableModel.setData(articles);
        tableModel.fireTableDataChanged();
    }

    public void addArticle(ArticleDTO articleDTO) {
        articles.add(articleDTO);
        tableModel.fireTableDataChanged();
    }

    public void addArticles(List<ArticleDTO> articlesDTO) {
        for (ArticleDTO dto : articlesDTO) {
            this.articles.add(dto);
        }
        tableModel.fireTableDataChanged();
    }

    public void clearArticles() {
        articles.clear();
        tableModel.fireTableDataChanged();
    }

    public ArticlesTablePanel() {
        tableModel.setData(articles);
        table1.setModel(tableModel);

        DefaultTableColumnModel cm = new DefaultTableColumnModel();
        cm.addColumn(table1.getColumn("orderno"));
        cm.addColumn(table1.getColumn("full_account_no"));
        cm.addColumn(table1.getColumn("account_name"));
        cm.addColumn(table1.getColumn("description"));
        cm.addColumn(table1.getColumn("debit"));
        cm.addColumn(table1.getColumn("credit"));
        cm.addColumn(table1.getColumn("costcenter1"));
        cm.addColumn(table1.getColumn("costcenter2"));
        cm.addColumn(table1.getColumn("costcenter3"));

        table1.setColumnModel(cm);
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new CardLayout(0, 0));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, "Card1");
        table1 = new JTable();
        Font table1Font = this.$$$getFont$$$(null, -1, 16, table1.getFont());
        if (table1Font != null) table1.setFont(table1Font);
        scrollPane1.setViewportView(table1);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
